name: "CI distro"
on:
  push:
    branches:
      - main

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: bubble-up
  PROJECT_PATH: ./

jobs:
  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.3
    steps:

      - name: Install sudo package
        run: apt update && apt install sudo

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

      - name: Publish to AWS S3
        run: aws s3 cp --recursive ./build/web/ s3://${{ secrets.AWS_DISTRIBUTION_S3_BUCKET }}/

      - name: Invalidate AWS CloudFront distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

#  export-windows:
#    name: Windows Export
#    runs-on: ubuntu-20.04
#    container:
#      image: barichello/godot-ci:4.3
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mkdir -v -p ~/.config/
#          mv /root/.config/godot ~/.config/godot
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Windows Build
#        run: |
#          mkdir -v -p build/windows
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: windows
#          path: build/windows

#  export-linux:
#    name: Linux Export
#    runs-on: ubuntu-20.04
#    container:
#      image: barichello/godot-ci:4.3
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Linux Build
#        run: |
#          mkdir -v -p build/linux
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: linux
#          path: build/linux

#  export-mac:
#    name: Mac Export
#    runs-on: ubuntu-20.04
#    container:
#      image: barichello/godot-ci:4.3
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Mac Build
#        run: |
#          mkdir -v -p build/mac
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: mac
#          path: build/mac